
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##
#server {
	#    listen 80;
    #   server_name 20.46.48.83;  # Replace with your domain or IP
#
   # return 301 https://$host$request_uri;
    #    location / {
    #   root /home/azureuser/Front_End/dist;  # Path to your frontend build folder
    #   index index.html;  # Default file to serve
    #   try_files $uri /index.html;  # Handle routing for single-page applications
    #    }

    # location /api/ {
    #   proxy_pass http://localhost:3000/;  # Forward requests to the backend server
    #   proxy_set_header Host $host;
    #   proxy_set_header X-Real-IP $remote_addr;
    #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #   proxy_set_header X-Forwarded-Proto $scheme;
    #}
   #}

#server {
#    listen 80;
#   server_name 20.46.48.83;  # Replace with your domain or IP

    #     ssl_certificate /home/azureuser/ssl_cert/cert.pem.txt;  # Path to your SSL certificate
    # ssl_certificate_key /home/azureuser/ssl_cert/priv.pem.txt;

#   location / {
#       root /home/azureuser/Front_End/dist;  # Path to your frontend build folder
#       index index.html;  # Default file to serve
#       try_files $uri /index.html;  # Handle routing for single-page applications
#   }

#   location /api/ {
#       proxy_pass http://localhost:3000/;  # Forward requests to the backend server
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header X-Forwarded-Proto $scheme;
#   }
#}


server {
    server_name linkup-app.tech;  # Replace with your domain or IP

    #   return 301 https://$host$request_uri;
    #     location / {
    #	      root /home/azureuser/Front_End/dist;  # Path to your frontend build folder
    #	     index index.html;  # Default file to serve
    #	 try_files $uri /index.html;  # Handle routing for single-page applications
    #	 }
     location /.well-known/acme-challenge/ {
        root /var/www/html;
    }
	location / {
       root /home/azureuser/Front_deploy;
       index index.html;
       try_files $uri $uri/ /index.html;


   }

    # location /api/ {
	    # proxy_pass http://localhost:3000/;  # Forward requests to the backend server
	# proxy_set_header Host $host;
	# proxy_set_header X-Real-IP $remote_addr;
	# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	#        proxy_set_header X-Forwarded-Proto $scheme;
    # }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/linkup-app.tech/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/linkup-app.tech/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

#server {
#    listen 443 ssl;
#   server_name linkup-app.tech  www.linkup-app.tech;  # Add www subdomain
#
    # Add security headers
#   add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#
#   location / {
#       root /home/azureuser/Front_deploy;
#       index index.html;
#       try_files $uri $uri/ /index.html;
#       
#       # Prevent caching of index.html
#        location = /index.html {
#           add_header Cache-Control "no-cache, no-store, must-revalidate";
#       }
#   }
#}
server {
	#    if ($host = api.linkup-egypt.tech) {
	#        return 301 https://$host$request_uri;
	#    } # managed by Certbot
    server_name api.linkup-app.tech;

    # Redirect HTTP to HTTPS
    #    return 301 https://$host$request_uri;
	location / {
       proxy_pass http://localhost:3000/;

       # Cookie persistence fix
       proxy_cookie_path / "/; Secure; SameSite=None";
        proxy_cookie_domain ~.linkup-egypt.tech .linkup-egypt.tech;

       # Required headers
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header X-Forwarded-Proto $scheme;

       # WebSocket support
       proxy_http_version 1.1;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection "upgrade";
   }



    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/api.linkup-app.tech/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/api.linkup-app.tech/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

#server {
#    listen 443 ssl;
#    server_name api.linkup-egypt.tech;
#
#   ssl_certificate /etc/letsencrypt/live/api.linkup-egypt.tech/fullchain.pem;
#   ssl_certificate_key /etc/letsencrypt/live/api.linkup-egypt.tech/privkey.pem;
#
#   location / {
#       proxy_pass http://localhost:3000/;
#       
#       # Cookie persistence fix
#       proxy_cookie_path / "/; Secure; SameSite=None";
#        proxy_cookie_domain ~.linkup-egypt.tech .linkup-egypt.tech;
#
#       # Required headers
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header X-Forwarded-Proto $scheme;
#       
#       # WebSocket support
#       proxy_http_version 1.1;
#       proxy_set_header Upgrade $http_upgrade;
#       proxy_set_header Connection "upgrade";
#   }
#}

#server {
#    server_name vault.linkup-egypt.tech;
#
#    location / {
#        proxy_pass http://127.0.0.1:8200;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#    }

#    listen 443 ssl; # managed by Certbot
#    ssl_certificate /etc/letsencrypt/live/vault.linkup-egypt.tech/fullchain.pem; # managed by Certbot
#    ssl_certificate_key /etc/letsencrypt/live/vault.linkup-egypt.tech/privkey.pem; # managed by Certbot
#    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

#}



server {
	#    if ($host = vault.linkup-egypt.tech) {
	    # return 301 https://$host$request_uri;
	#    } # managed by Certbot
    server_name vault.linkup-app.tech;
    #    return 404; # managed by Certbot
	location / {
        proxy_pass http://127.0.0.1:8200;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }



    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/vault.linkup-app.tech/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/vault.linkup-app.tech/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}



server {
    if ($host = linkup-app.tech) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name linkup-app.tech;
    return 404; # managed by Certbot


}

server {
    if ($host = api.linkup-app.tech) {
        return 301 https://$host$request_uri;
    } # managed by Certbot




    listen 80;
    server_name api.linkup-app.tech;
    return 404; # managed by Certbot


}




server {
    if ($host = vault.linkup-app.tech) {
        return 301 https://$host$request_uri;
    } # managed by Certbot




    listen 80;
    server_name vault.linkup-app.tech;
    return 404; # managed by Certbot


}